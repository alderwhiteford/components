name: Release
run-name: CD - Validate and Create New Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release: Syntax - (*.*.*)'
        required: true'
        type: string
  
jobs:
  create-release:
    name: Create New Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve current package version
        id: package-version
        run: |
          current_version=$(jq -r '.version' package.json)
          echo "Current version: $current_version"
          echo "::set-output name=current_version::$current_version"
      
      - name: Validate New Version
        id: validate-version
        run: node .github/scripts/validate-version.js ${{ steps.package-version.outputs.current_version }} ${{ github.event.inputs.version }}
      
      - name: Create Release
        id: create-release
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/releases
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          tag_name: ${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            ## Changes
            - New version: ${{ github.event.inputs.version }}
            - Previous version: ${{ steps.package-version.outputs.current_version }}
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish Release
          uses: actions/setup-node@v4
          with:
            node-version: '20.x'
            registry-url: 'https://registry.npmjs.org'
        - run: npm ci
        - run: npm publish --provenance --access public
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    